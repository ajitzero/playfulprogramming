---
import { codeToHtml } from 'utils/markdown/shiki/rehype-transform';
import { tokenizeMessage } from './parse-message'
import "../../styles/shiki.scss";

interface Props {
    content: string
    lookupUserName: (id: string) => Promise<string>
}

const { content, lookupUserName } = Astro.props

const tokens = tokenizeMessage(content);
---

{
    tokens.map(async token => {
        if (token.type === 'text') {
            return token.content;
        }
        if (token.type === 'mention') {
            const username = await lookupUserName(token.id);
            return <span style="background-color: lightblue; color: blue">@{username}</span>;
        }
        if (token.type === "codeInline") {
            return <code>{token.content}</code>;
        }
        if (token.type === "codeBlock") {
            const code = await codeToHtml(token.content, token.lang);
            return <Fragment set:html={code}/>
        }
        return <img height="16" src={`https://cdn.discordapp.com/emojis/${token.id}.png`} alt={token.name}>;
    })
}
